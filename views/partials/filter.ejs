<div class="filters">
  <form id="filterForm" action="/filter" method="GET">
    <div class="filter-row">
      <div class="custom-dropdown">
        <button type="button" class="dropdown-toggle type-dropdown" aria-haspopup="true" aria-expanded="false">
          <i class="fas fa-file text-primary"></i> Type: All <i class="fas fa-chevron-down"></i>
        </button>
        <ul class="dropdown-menu" role="menu">
          <li><a href="#" data-value=""><i class="fas fa-file text-primary"></i> All</a></li>
          <li><a href="#" data-value="application/pdf"><i class="fas fa-file-pdf text-danger"></i> PDF</a></li>
          <li><a href="#" data-value="application/vnd.openxmlformats-officedocument.wordprocessingml.document"><i
                class="fas fa-file-word text-primary"></i> Document</a></li>
          <li><a href="#" data-value="application/vnd.openxmlformats-officedocument.presentationml.presentation"><i
                class="fas fa-file-powerpoint text-warning"></i> PowerPoint</a>
          </li>
          <li><a href="#" data-value="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"><i
                class="fas fa-file-excel text-success"></i> Excel</a></li>
          <li><a href="#" data-value="text/plain"><i class="fas fa-file-alt text-light"></i> Text file</a></li>
          <li><a href="#" data-value="image/jpeg"><i class="fas fa-file-image text-danger"></i> JPG</a></li>
          <li><a href="#" data-value="image/png"><i class="fas fa-file-image text-danger"></i> PNG</a></li>
          <li><a href="#" data-value="image/gif"><i class="fas fa-file-image text-danger"></i> GIF</a></li>
        </ul>
        <input type="hidden" name="type" id="typeInput" value="">
      </div>

      <div class="custom-dropdown">
        <button type="button" class="dropdown-toggle people-dropdown" aria-haspopup="true" aria-expanded="false">
          <i class="fas fa-users text-success"></i> People: Any <i class="fas fa-chevron-down"></i>
        </button>
        <ul class="dropdown-menu" role="menu">
          <li><a href="#" data-value=""><i class="fas fa-users text-success"></i> Any</a></li>
          <li><a href="#" data-value="me"><i class="fas fa-user text-primary"></i> Only me</a></li>
          <li><a href="#" data-value="shared"><i class="fas fa-share-alt text-info"></i> Shared with me</a></li>
          <li><a href="#" data-value="anyone"><i class="fas fa-globe text-warning"></i> Anyone</a></li>
        </ul>
        <input type="hidden" name="people" id="peopleInput" value="">
      </div>

      <div class="custom-dropdown">
        <button type="button" class="dropdown-toggle time-dropdown" aria-haspopup="true" aria-expanded="false">
          <i class="fas fa-clock text-danger"></i> Modified: Any time <i class="fas fa-chevron-down"></i>
        </button>
        <ul class="dropdown-menu" role="menu">
          <li><a href="#" data-value=""><i class="fas fa-infinity text-danger"></i> Any time</a></li>
          <li><a href="#" data-value="today"><i class="fas fa-calendar-day text-primary"></i> Today</a></li>
          <li><a href="#" data-value="week"><i class="fas fa-calendar-week text-success"></i> This week</a></li>
          <li><a href="#" data-value="month"><i class="fas fa-calendar-alt text-warning"></i> This month</a></li>
        </ul>
        <input type="hidden" name="modified" id="modifiedInput" value="">
      </div>

      <button type="submit" class="apply-filters">
        <i class="fas fa-search"></i> Apply Filters
      </button>
    </div>
  </form>
</div>

<style>
  .filters {
    margin-bottom: 20px;
  }

  .filter-row {
    display: flex;
    align-items: center;
    gap: 10px;
    flex-wrap: wrap;
  }

  .custom-dropdown {
    position: relative;
    display: inline-block;
  }

  .dropdown-toggle {
    background-color: #ffffff;
    color: #333333;
    border: 1px solid #e0e0e0;
    padding: 10px 15px;
    font-size: 14px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: space-between;
    min-width: 150px;
    white-space: nowrap;
    border-radius: 5px;
    transition: all 0.3s ease;
  }

  .dropdown-toggle:hover {
    background-color: #f5f5f5;
  }

  .dropdown-toggle i {
    margin-right: 5px;
  }

  .dropdown-toggle i.fa-chevron-down {
    margin-left: 5px;
    margin-right: 0;
    color: #777777;
  }

  .type-dropdown {
    border-color: #3498db;
  }

  .type-dropdown:hover {
    background-color: #ebf5fb;
  }

  .people-dropdown {
    border-color: #2ecc71;
  }

  .people-dropdown:hover {
    background-color: #eafaf1;
  }

  .time-dropdown {
    border-color: #e74c3c;
  }

  .time-dropdown:hover {
    background-color: #fdedec;
  }

  .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 1000;
    display: none;
    min-width: 150px;
    padding: 5px 0;
    margin: 2px 0 0;
    background-color: #ffffff;
    border: 1px solid #e0e0e0;
    border-radius: 4px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .dropdown-menu.show {
    display: block;
  }

  .dropdown-menu li {
    list-style-type: none;
  }

  .dropdown-menu a {
    display: block;
    padding: 8px 15px;
    clear: both;
    font-weight: 400;
    color: #333333;
    text-decoration: none;
    white-space: nowrap;
    transition: background-color 0.2s ease;
  }

  .dropdown-menu a:hover,
  .dropdown-menu a:focus {
    background-color: #f5f5f5;
  }

  .dropdown-menu a i {
    margin-right: 8px;
    width: 16px;
    text-align: center;
  }

  .apply-filters {
    background-color: #ffffff;
    color: #333333;
    border: 1px solid #9b59b6;
    padding: 10px 15px;
    font-size: 14px;
    cursor: pointer;
    transition: all 0.3s ease;
    white-space: nowrap;
    border-radius: 5px;
  }

  .apply-filters:hover {
    background-color: #9b59b6;
    color: #ffffff;
  }

  .apply-filters i {
    margin-right: 5px;
    color: #9b59b6;
  }

  .apply-filters:hover i {
    color: #ffffff;
  }

  .text-primary {
    color: #3498db;
  }

  .text-success {
    color: #2ecc71;
  }

  .text-warning {
    color: #f1c40f;
  }

  .text-danger {
    color: #e74c3c;
  }

  .text-info {
    color: #3498db;
  }

  @media (max-width: 768px) {
    .filter-row {
      flex-direction: row;
      flex-wrap: wrap;
    }

    .filter-row .custom-dropdown,
    .filter-row .apply-filters {
      max-width: 45%;
    }


    .custom-dropdown,
    .apply-filters {
      width: 100%;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const filterForm = document.getElementById('filterForm');
    const dropdowns = filterForm.querySelectorAll('.custom-dropdown');

    dropdowns.forEach(dropdown => {
      const button = dropdown.querySelector('.dropdown-toggle');
      const menu = dropdown.querySelector('.dropdown-menu');
      const input = dropdown.querySelector('input[type="hidden"]');

      button.addEventListener('click', function (e) {
        e.stopPropagation();
        closeAllDropdowns();
        menu.classList.toggle('show');
        button.setAttribute('aria-expanded', menu.classList.contains('show'));
      });

      menu.addEventListener('click', function (e) {
        if (e.target.tagName === 'A') {
          e.preventDefault();
          const selectedValue = e.target.getAttribute('data-value');
          const selectedText = e.target.textContent;
          const icon = e.target.querySelector('i').cloneNode(true);

          button.innerHTML = `${icon.outerHTML} ${selectedText} <i class="fas fa-chevron-down"></i>`;
          input.value = selectedValue;
          menu.classList.remove('show');
          button.setAttribute('aria-expanded', 'false');
        }
      });

    });

    document.addEventListener('click', closeAllDropdowns);

    function closeAllDropdowns() {
      dropdowns.forEach(dropdown => {
        const menu = dropdown.querySelector('.dropdown-menu');
        const button = dropdown.querySelector('.dropdown-toggle');
        menu.classList.remove('show');
        button.setAttribute('aria-expanded', 'false');
      });
    }

    filterForm.addEventListener('submit', async function (e) {

      const formData = new FormData(filterForm);
      const searchParams = new URLSearchParams(formData);
      // Remove empty parameters
      for (const [key, value] of searchParams.entries()) {
        if (value === '') {
          searchParams.delete(key);
        }
      }
      try {
        const response = await fetch('/filter?' + searchParams.toString(), {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          },
        });

        if (response.ok) {
          console.log('Filter applied successfully');
        } else {
          console.error('Error filtering files');
        }
      } catch (error) {
        console.error('Error:', error);
      }

      // window.location.href = '/filter?' + searchParams.toString();
      // console.log('/filter?' + searchParams.toString());

    });
  });
</script>