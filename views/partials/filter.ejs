<!-- <div class="filters">
  <button>Type <i class="fas fa-chevron-down"></i></button>
  <button>People <i class="fas fa-chevron-down"></i></button>
  <button>Modified <i class="fas fa-chevron-down"></i></button>
</div> -->
<div class="filters">
  <form id="filterForm" action="/search" method="GET">
    <div class="filter-row">
      <div class="custom-dropdown">
        <button type="button" class="dropdown-toggle type-dropdown" aria-haspopup="true" aria-expanded="false">
          <i class="fas fa-file text-primary"></i> Type: All <i class="fas fa-chevron-down"></i>
        </button>
        <ul class="dropdown-menu" role="menu">
          <li><a href="#" data-value=""><i class="fas fa-file text-primary"></i> All</a></li>
          <li><a href="#" data-value="document"><i class="fas fa-file-word text-primary"></i> Document</a></li>
          <li><a href="#" data-value="spreadsheet"><i class="fas fa-file-excel text-success"></i> Spreadsheet</a></li>
          <li><a href="#" data-value="presentation"><i class="fas fa-file-powerpoint text-warning"></i> Presentation</a>
          </li>
          <li><a href="#" data-value="image"><i class="fas fa-file-image text-info"></i> Image</a></li>
          <li><a href="#" data-value="video"><i class="fas fa-file-video text-danger"></i> Video</a></li>
        </ul>
        <input type="hidden" name="type" id="typeInput" value="">
      </div>

      <div class="custom-dropdown">
        <button type="button" class="dropdown-toggle people-dropdown" aria-haspopup="true" aria-expanded="false">
          <i class="fas fa-users text-success"></i> People: Any <i class="fas fa-chevron-down"></i>
        </button>
        <ul class="dropdown-menu" role="menu">
          <li><a href="#" data-value=""><i class="fas fa-users text-success"></i> Any</a></li>
          <li><a href="#" data-value="me"><i class="fas fa-user text-primary"></i> Only me</a></li>
          <li><a href="#" data-value="shared"><i class="fas fa-share-alt text-info"></i> Shared with me</a></li>
          <li><a href="#" data-value="anyone"><i class="fas fa-globe text-warning"></i> Anyone</a></li>
        </ul>
        <input type="hidden" name="people" id="peopleInput" value="">
      </div>

      <div class="custom-dropdown">
        <button type="button" class="dropdown-toggle time-dropdown" aria-haspopup="true" aria-expanded="false">
          <i class="fas fa-clock text-danger"></i> Modified: Any time <i class="fas fa-chevron-down"></i>
        </button>
        <ul class="dropdown-menu" role="menu">
          <li><a href="#" data-value=""><i class="fas fa-infinity text-danger"></i> Any time</a></li>
          <li><a href="#" data-value="today"><i class="fas fa-calendar-day text-primary"></i> Today</a></li>
          <li><a href="#" data-value="week"><i class="fas fa-calendar-week text-success"></i> This week</a></li>
          <li><a href="#" data-value="month"><i class="fas fa-calendar-alt text-warning"></i> This month</a></li>
        </ul>
        <input type="hidden" name="modified" id="modifiedInput" value="">
      </div>

      <button type="submit" class="apply-filters">
        <i class="fas fa-search"></i> Apply Filters
      </button>
    </div>
  </form>
</div>

<style>
  .filters {
    margin-bottom: 20px;
  }

  .filter-row {
    display: flex;
    align-items: center;
    gap: 10px;
    flex-wrap: wrap;
  }

  .custom-dropdown {
    position: relative;
    display: inline-block;
  }

  .dropdown-toggle {
    background-color: #ffffff;
    color: #333333;
    border: 1px solid #e0e0e0;
    padding: 10px 15px;
    font-size: 14px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: space-between;
    min-width: 150px;
    white-space: nowrap;
    border-radius: 5px;
    transition: all 0.3s ease;
  }

  .dropdown-toggle:hover {
    background-color: #f5f5f5;
  }

  .dropdown-toggle i {
    margin-right: 5px;
  }

  .dropdown-toggle i.fa-chevron-down {
    margin-left: 5px;
    margin-right: 0;
    color: #777777;
  }

  .type-dropdown {
    border-color: #3498db;
  }

  .type-dropdown:hover {
    background-color: #ebf5fb;
  }

  .people-dropdown {
    border-color: #2ecc71;
  }

  .people-dropdown:hover {
    background-color: #eafaf1;
  }

  .time-dropdown {
    border-color: #e74c3c;
  }

  .time-dropdown:hover {
    background-color: #fdedec;
  }

  .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 1000;
    display: none;
    min-width: 150px;
    padding: 5px 0;
    margin: 2px 0 0;
    background-color: #ffffff;
    border: 1px solid #e0e0e0;
    border-radius: 4px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .dropdown-menu.show {
    display: block;
  }

  .dropdown-menu li {
    list-style-type: none;
  }

  .dropdown-menu a {
    display: block;
    padding: 8px 15px;
    clear: both;
    font-weight: 400;
    color: #333333;
    text-decoration: none;
    white-space: nowrap;
    transition: background-color 0.2s ease;
  }

  .dropdown-menu a:hover,
  .dropdown-menu a:focus {
    background-color: #f5f5f5;
  }

  .dropdown-menu a i {
    margin-right: 8px;
    width: 16px;
    text-align: center;
  }

  .apply-filters {
    background-color: #ffffff;
    color: #333333;
    border: 1px solid #9b59b6;
    padding: 10px 15px;
    font-size: 14px;
    cursor: pointer;
    transition: all 0.3s ease;
    white-space: nowrap;
    border-radius: 5px;
  }

  .apply-filters:hover {
    background-color: #9b59b6;
    color: #ffffff;
  }

  .apply-filters i {
    margin-right: 5px;
    color: #9b59b6;
  }

  .apply-filters:hover i {
    color: #ffffff;
  }

  .text-primary {
    color: #3498db;
  }

  .text-success {
    color: #2ecc71;
  }

  .text-warning {
    color: #f1c40f;
  }

  .text-danger {
    color: #e74c3c;
  }

  .text-info {
    color: #3498db;
  }

  @media (max-width: 768px) {
    .filter-row {
      flex-direction: column;
      align-items: stretch;
    }

    .custom-dropdown,
    .apply-filters {
      width: 100%;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const filterForm = document.getElementById('filterForm');
    const dropdowns = filterForm.querySelectorAll('.custom-dropdown');

    dropdowns.forEach(dropdown => {
      const button = dropdown.querySelector('.dropdown-toggle');
      const menu = dropdown.querySelector('.dropdown-menu');
      const input = dropdown.querySelector('input[type="hidden"]');

      button.addEventListener('click', function (e) {
        e.stopPropagation();
        closeAllDropdowns();
        menu.classList.toggle('show');
        button.setAttribute('aria-expanded', menu.classList.contains('show'));
      });

      menu.addEventListener('click', function (e) {
        if (e.target.tagName === 'A') {
          e.preventDefault();
          const selectedValue = e.target.getAttribute('data-value');
          const selectedText = e.target.textContent;

          button.innerHTML = button.textContent.split(':')[0] + ': ' + selectedText + ' <i class="fas fa-chevron-down"></i>';
          input.value = selectedValue;
          menu.classList.remove('show');
          button.setAttribute('aria-expanded', 'false');
        }
      });
    });

    document.addEventListener('click', closeAllDropdowns);

    function closeAllDropdowns() {
      dropdowns.forEach(dropdown => {
        const menu = dropdown.querySelector('.dropdown-menu');
        const button = dropdown.querySelector('.dropdown-toggle');
        menu.classList.remove('show');
        button.setAttribute('aria-expanded', 'false');
      });
    }

    filterForm.addEventListener('submit', function (e) {
      e.preventDefault();

      const formData = new FormData(filterForm);
      const searchParams = new URLSearchParams(formData);

      // Remove empty parameters
      for (const [key, value] of searchParams.entries()) {
        if (value === '') {
          searchParams.delete(key);
        }
      }

      // Send the search request
      fetch('/search?' + searchParams.toString())
        .then(response => response.json())
        .then(data => {
          // Handle the search results
          console.log(data);
          // Update your file list or perform any other necessary actions
          updateFileList(data);
        })
        .catch(error => {
          console.error('Error:', error);
        });
    });

    function updateFileList(data) {
      const fileContainer = document.getElementById('fileContainer');
      fileContainer.innerHTML = ''; // Clear existing content

      if (data.length === 0) {
        fileContainer.innerHTML = '<p>No files found matching the selected criteria.</p>';
        return;
      }

      data.forEach(file => {
        const fileElement = document.createElement('div');
        fileElement.className = 'file-item';
        fileElement.innerHTML = `
        <span>${file.name}</span>
        <span>${file.type}</span>
        <span>${file.lastModified}</span>
        <span>${file.owner}</span>
      `;
        fileContainer.appendChild(fileElement);
      });
    }
  });
</script>